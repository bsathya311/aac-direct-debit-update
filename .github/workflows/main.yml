name: Validate Controls as Code Exist
on:
  push:
    paths:
      - aac-direct-debit-update/controls/**
  pull_request:
    paths:
      - aac-direct-debit-update/controls/**
  workflow_dispatch:
jobs:
  check-controls-exist:
    name: Validate Control Definitions and Code
    runs-on: ubuntu-latest

    #Checkout the repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

    #Install yq to parse YAML
      - name: Install yq
        run: >
          sudo wget
          https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
     
      #Print working directory and contents for debugging
      - name: Debug directory structure
        run: >
          echo "Current dir: $(pwd)"
          echo "Contents:"
          ls -R
      
      #Validate each control YAML has an existing policy file
      - name: Validate control code
        run: >
          echo "Searching for all *-control.yaml files..."


          # Find all control YAML files recursively under /controls
          CONTROL_FILES=$(find controls -name '*-control.yaml')

          # Fail if no control files are found
          if [ -z "$CONTROL_FILES" ]; then
            echo "No control YAML files found under /controls"
            exit 1
          fi

          STATUS=0


          # Loop over each control YAML file

          for FILE in $CONTROL_FILES; do
            echo "Checking $FILE"

            # Use yq to extract the 'policy' field from the YAML file
            POLICY_PATH=$(yq '.policy' "$FILE")

            # Warn if the 'policy' field is missing
            if [ -z "$POLICY_PATH" ] || [ "$POLICY_PATH" == "null" ]; then
              echo "Missing 'policy' field in $FILE"
              STATUS=1
              continue
            fi

            # Compute the full file path to the policy relative to the control YAML
            CONTROL_DIR=$(dirname "$FILE")
            FULL_POLICY_PATH="$CONTROL_DIR/$POLICY_PATH"

            # Check if the referenced policy file exists
            if [ ! -f "$FULL_POLICY_PATH" ]; then
              echo "Referenced policy file not found: $FULL_POLICY_PATH"
              STATUS=1
            else
              echo "Policy exists: $FULL_POLICY_PATH"
            fi
          done


          # Exit with error if any policy file was missing

          exit $STATUS
